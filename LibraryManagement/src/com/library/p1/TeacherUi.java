/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.library.p1;

import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Mohd Ashraf
 */
public class TeacherUi extends javax.swing.JFrame {

    /**
     * Creates new form TeacherUi
     */
    String matrix_id;
    Connection con1;
    PreparedStatement select,insert;
    ResultSet rs;
    public TeacherUi() {
        initComponents();
        database_connection();
        
    }

    public TeacherUi(String mat_id) {
        initComponents();
        database_connection();
        matrix_id = mat_id;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_show_books = new javax.swing.JTable();
        jTextField_books_name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton_Search = new javax.swing.JButton();
        jButton_request = new javax.swing.JButton();
        jButton_logout = new javax.swing.JButton();
        jButton1_return_books = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable_show_books.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Author", "BOOKS", "Category"
            }
        ));
        jTable_show_books.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_show_booksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_show_books);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SEARCH");

        jButton_Search.setText("SEARCH");
        jButton_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SearchActionPerformed(evt);
            }
        });

        jButton_request.setText("REQUEST");
        jButton_request.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_requestActionPerformed(evt);
            }
        });

        jButton_logout.setText("Log out");
        jButton_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_logoutActionPerformed(evt);
            }
        });

        jButton1_return_books.setText("Return Book");
        jButton1_return_books.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_return_booksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton_request)
                                .addGap(18, 18, 18)
                                .addComponent(jButton_Search))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_books_name, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton_logout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1_return_books)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_logout)
                    .addComponent(jButton1_return_books))
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_books_name, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Search)
                    .addComponent(jButton_request))
                .addContainerGap(168, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void database_connection()
    {
        try {
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/library_management","root","");
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }
    
    
    private void jButton_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SearchActionPerformed
        // TODO add your handling code here:
        String bname,s1,s3,s2;
        
        bname = jTextField_books_name.getText();
        
        String data = bname;
        String[] cp = data.split(" ");
        for (String str : cp) {
            String s = str;
            Pattern pattern = Pattern.compile(s, Pattern.CASE_INSENSITIVE);
            try {
                select = (PreparedStatement) con1.prepareStatement("select * from books");
                ResultSet rs = select.executeQuery();
                DefaultTableModel df = (DefaultTableModel) jTable_show_books.getModel();
                df.setRowCount(0);
                while (rs.next()) {
                    s1 = rs.getString("author");
                    s2 = rs.getString("book_name");
                    s3 = rs.getString("category");
                    

                    Matcher matcher = pattern.matcher(s2);
                    boolean matchfound = matcher.find();
                    if (s2.equals(bname)) {
                        String[] row = { s1, s2, s3 };
                        df.addRow(row);
                    }
                    else
                    {
                        if (matchfound) {
                             String[] row = { s1, s2, s3 };
                             df.addRow(row);
                        }

                    }
                }

                
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
       
        
    }//GEN-LAST:event_jButton_SearchActionPerformed

    private void jTable_show_booksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_show_booksMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dt= (DefaultTableModel) jTable_show_books.getModel();
        int row = jTable_show_books.getSelectedRow();
        String book_name = dt.getValueAt(row, 1).toString();
        jTextField_books_name.setText(book_name);
        
    }//GEN-LAST:event_jTable_show_booksMouseClicked

    private void jButton_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_logoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new LoginUi().setVisible(true);
    }//GEN-LAST:event_jButton_logoutActionPerformed

    private void jButton_requestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_requestActionPerformed
        // TODO add your handling code here:
        String bname;
        bname = jTextField_books_name.getText();
        
        try {
            if(bname.isEmpty()){
                JOptionPane.showMessageDialog(this, "Please select book from the table first!");
            }
            else
            {
               select = con1.prepareStatement("select * from books where book_name=?");
                select.setString(1, bname);
                rs = select.executeQuery();
                if(rs.next())
                {
                    String book,author;
                    book = rs.getString("book_name");
                    author = rs.getString("author");
                    //System.out.println(book);
                    //System.out.println(author);
                    insert = con1.prepareStatement("insert into req_books_by_teacher(mat_id,books_name,author) values(?,?,?)");
                    insert.setString(1, matrix_id);
                    insert.setString(2, book);
                    insert.setString(3, author);
                    int k = insert.executeUpdate();
                    if(k == 1)
                    {
                         JOptionPane.showMessageDialog(this,"Request has been sent to admin!");
                    }
                }
            }
        } catch (SQLException ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Book not found!");
        }
    }//GEN-LAST:event_jButton_requestActionPerformed

    private void jButton1_return_booksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_return_booksActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new TeacherUi_returnbook(matrix_id).setVisible(true);
    }//GEN-LAST:event_jButton1_return_booksActionPerformed

    /*private void table_category()
    {
        try{
            DefaultTableModel df = (DefaultTableModel) jTable_show_books.getModel();
            df.setRowCount(0);
            
            while(rs.next())
            {
               Vector v1 = new Vector();
               v1.add(rs.getInt("id"));
               v1.add(rs.getString("cat_name"));
               v1.add(rs.getString("status"));
                
                String s1= rs.getString("author");
                String s2= rs.getString("book_name");
                String s3= rs.getString("category");
                
                String[] row = { s1, s2, s3 };
                df.addRow(row);
               
               //df.addRow(v1);
            }
        }catch(Exception ex)
        {
            System.out.println(ex);
        }
    }*/
    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherUi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherUi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_return_books;
    private javax.swing.JButton jButton_Search;
    private javax.swing.JButton jButton_logout;
    private javax.swing.JButton jButton_request;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_show_books;
    private javax.swing.JTextField jTextField_books_name;
    // End of variables declaration//GEN-END:variables
}
